name: Python Application Workflow

on:
  workflow_call:
    inputs:
      image_name:
        description: 'The name of the Docker image'
        required: true
        type: string

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Convert repository name to lowercase
        id: repo-name-lowercase
        run: echo "REPO_NAME_LOWERCASE=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GHR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_NAME_LOWERCASE }}/${{ inputs.image_name }}:latest

  deploy-to-aks:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: |
          az aks get-credentials --resource-group dev-k8s-rg --name dev-k8s --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl create namespace my-app-ns || true  # Ensure the namespace exists
          kubectl set image deployment/my-app-deployment my-app=ghcr.io/${{ env.REPO_NAME_LOWERCASE }}/${{ inputs.image_name }}:latest -n my-app-ns
