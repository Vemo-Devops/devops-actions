name: Python Application Workflow

on:
  workflow_call:
    inputs:
      image_name:
        description: 'The name of the Docker image'
        required: true
        type: string
    secrets:
      GH_USER:
        required: true
      GHCR_TOKEN:
        required: true
      AZURE_TOKEN:
        required: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Convert repository name to lowercase
        run: echo "REPO_NAME_LOWERCASE=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: docker.io/${{ secrets.GH_USER }}/${{ inputs.image_name }}:latest

  deploy-to-aks:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install kubelogin
        run: |
          curl -LO "https://github.com/Azure/kubelogin/releases/download/v0.0.10/kubelogin-linux-amd64.zip"
          unzip kubelogin-linux-amd64.zip
          sudo mv bin/linux_amd64/kubelogin /usr/local/bin

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_TOKEN }}

      - name: Set AKS Context
        run: |
          az aks get-credentials --resource-group dev-k8s-rg --name dev-k8s --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl create namespace my-app-ns || true  # Ensure the namespace exists
          kubectl set image deployment/my-app-deployment my-app=docker.io/${{ secrets.GH_USER }}/${{ inputs.image_name }}:latest -n my-app-ns
